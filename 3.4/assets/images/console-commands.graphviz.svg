<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.43.0 (0)
 -->
<!-- Title: %3 Pages: 1 -->
<svg width="2488pt" height="1180pt"
 viewBox="0.00 0.00 2488.00 1180.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 1176)">
<title>%3</title>
<g id="clust1" class="cluster">
<title>cluster_0</title>
<polygon fill="transparent" stroke="black" points="24,-951 24,-1164 1220,-1164 1220,-951 24,-951"/>
<text text-anchor="middle" x="622" y="-1148.8" font-family="Times,serif" font-size="14.00">Bartlett\UmlWriter\Console</text>
</g>
<g id="clust2" class="cluster">
<title>cluster_1</title>
<polygon fill="transparent" stroke="black" points="8,-128 8,-943 1236,-943 1236,-128 8,-128"/>
<text text-anchor="middle" x="622" y="-927.8" font-family="Times,serif" font-size="14.00">Symfony\Component\Console</text>
</g>
<g id="clust3" class="cluster">
<title>cluster_2</title>
<polygon fill="transparent" stroke="black" points="517,-8 517,-120 728,-120 728,-8 517,-8"/>
<text text-anchor="middle" x="622.5" y="-104.8" font-family="Times,serif" font-size="14.00">Symfony\Contracts\Service</text>
</g>
<g id="clust4" class="cluster">
<title>cluster_3</title>
<polygon fill="transparent" stroke="black" points="1284,-989 1284,-1126 2432,-1126 2432,-989 1284,-989"/>
<text text-anchor="middle" x="1858" y="-1110.8" font-family="Times,serif" font-size="14.00">Bartlett\UmlWriter\Console\Command</text>
</g>
<g id="clust5" class="cluster">
<title>cluster_4</title>
<polygon fill="transparent" stroke="black" points="1244,-134.5 1244,-936.5 2472,-936.5 2472,-134.5 1244,-134.5"/>
<text text-anchor="middle" x="1858" y="-921.3" font-family="Times,serif" font-size="14.00">Symfony\Component\Console\Command</text>
</g>
<!-- Bartlett\\UmlWriter\\Console\\Application -->
<g id="node1" class="node">
<title>Bartlett\\UmlWriter\\Console\\Application</title>
<polygon fill="#fefece" stroke="transparent" points="1211.5,-1133 32.5,-1133 32.5,-959 1211.5,-959 1211.5,-1133"/>
<polygon fill="#eeeeee" stroke="transparent" points="41,-1095 41,-1129 1204,-1129 1204,-1095 41,-1095"/>
<polygon fill="none" stroke="black" points="41,-1095 41,-1129 1204,-1129 1204,-1095 41,-1095"/>
<text text-anchor="start" x="577.5" y="-1101.8" font-family="Times,serif" font-weight="bold" font-size="14.00">Application</text>
<polygon fill="none" stroke="black" points="41,-1070 41,-1095 1204,-1095 1204,-1070 41,-1070"/>
<text text-anchor="start" x="46" y="-1078.8" font-family="Times,serif" font-size="14.00">+ «static» NAME : string = &quot;umlWriter&quot; {readOnly}</text>
<polygon fill="none" stroke="black" points="41,-1064 41,-1070 1204,-1070 1204,-1064 41,-1064"/>
<polygon fill="none" stroke="black" points="41,-963 41,-1064 1204,-1064 1204,-963 41,-963"/>
<text text-anchor="start" x="46" y="-1047.8" font-family="Times,serif" font-size="14.00">+ __construct(container : Psr\Container\ContainerInterface)</text>
<text text-anchor="start" x="46" y="-1028.8" font-family="Times,serif" font-size="14.00">+ getHelp() : string</text>
<text text-anchor="start" x="46" y="-1009.8" font-family="Times,serif" font-size="14.00">+ getLongVersion() : string</text>
<text text-anchor="start" x="46" y="-990.8" font-family="Times,serif" font-size="14.00">+ doRun(input : Symfony\Component\Console\Input\InputInterface, output : Symfony\Component\Console\Output\OutputInterface) : int</text>
<text text-anchor="start" x="46" y="-971.8" font-family="Times,serif" font-size="14.00">+ run(input : Symfony\Component\Console\Input\InputInterface = «unknown», output : Symfony\Component\Console\Output\OutputInterface = «unknown») : int</text>
</g>
<!-- Symfony\\Component\\Console\\Application -->
<g id="node2" class="node">
<title>Symfony\\Component\\Console\\Application</title>
<polygon fill="#fefece" stroke="transparent" points="1227.5,-912 16.5,-912 16.5,-136 1227.5,-136 1227.5,-912"/>
<polygon fill="#eeeeee" stroke="transparent" points="25,-874 25,-908 1220,-908 1220,-874 25,-874"/>
<polygon fill="none" stroke="black" points="25,-874 25,-908 1220,-908 1220,-874 25,-874"/>
<text text-anchor="start" x="577.5" y="-880.8" font-family="Times,serif" font-weight="bold" font-size="14.00">Application</text>
<polygon fill="none" stroke="black" points="25,-868 25,-874 1220,-874 1220,-868 25,-868"/>
<polygon fill="none" stroke="black" points="25,-140 25,-868 1220,-868 1220,-140 25,-140"/>
<text text-anchor="start" x="30" y="-851.8" font-family="Times,serif" font-size="14.00">+ __construct(name : string = &#39;UNKNOWN&#39;, version : string = &#39;UNKNOWN&#39;)</text>
<text text-anchor="start" x="30" y="-832.8" font-family="Times,serif" font-size="14.00">+ setDispatcher(dispatcher : Symfony\Contracts\EventDispatcher\EventDispatcherInterface) : void</text>
<text text-anchor="start" x="30" y="-813.8" font-family="Times,serif" font-size="14.00">+ setCommandLoader(commandLoader : Symfony\Component\Console\CommandLoader\CommandLoaderInterface)</text>
<text text-anchor="start" x="30" y="-794.8" font-family="Times,serif" font-size="14.00">+ getSignalRegistry() : Symfony\Component\Console\SignalRegistry\SignalRegistry</text>
<text text-anchor="start" x="30" y="-775.8" font-family="Times,serif" font-size="14.00">+ setSignalsToDispatchEvent(signalsToDispatchEvent : int = «unknown»)</text>
<text text-anchor="start" x="30" y="-756.8" font-family="Times,serif" font-size="14.00">+ run(input : Symfony\Component\Console\Input\InputInterface = «unknown», output : Symfony\Component\Console\Output\OutputInterface = «unknown») : int</text>
<text text-anchor="start" x="30" y="-737.8" font-family="Times,serif" font-size="14.00">+ doRun(input : Symfony\Component\Console\Input\InputInterface, output : Symfony\Component\Console\Output\OutputInterface)</text>
<text text-anchor="start" x="30" y="-718.8" font-family="Times,serif" font-size="14.00">+ reset()</text>
<text text-anchor="start" x="30" y="-699.8" font-family="Times,serif" font-size="14.00">+ setHelperSet(helperSet : Symfony\Component\Console\Helper\HelperSet)</text>
<text text-anchor="start" x="30" y="-680.8" font-family="Times,serif" font-size="14.00">+ getHelperSet() : Symfony\Component\Console\Helper\HelperSet</text>
<text text-anchor="start" x="30" y="-661.8" font-family="Times,serif" font-size="14.00">+ setDefinition(definition : Symfony\Component\Console\Input\InputDefinition)</text>
<text text-anchor="start" x="30" y="-642.8" font-family="Times,serif" font-size="14.00">+ getDefinition() : Symfony\Component\Console\Input\InputDefinition</text>
<text text-anchor="start" x="30" y="-623.8" font-family="Times,serif" font-size="14.00">+ complete(input : Symfony\Component\Console\Completion\CompletionInput, suggestions : Symfony\Component\Console\Completion\CompletionSuggestions) : void</text>
<text text-anchor="start" x="30" y="-604.8" font-family="Times,serif" font-size="14.00">+ getHelp() : string</text>
<text text-anchor="start" x="30" y="-585.8" font-family="Times,serif" font-size="14.00">+ areExceptionsCaught() : bool</text>
<text text-anchor="start" x="30" y="-566.8" font-family="Times,serif" font-size="14.00">+ setCatchExceptions(boolean : bool)</text>
<text text-anchor="start" x="30" y="-547.8" font-family="Times,serif" font-size="14.00">+ setCatchErrors(catchErrors : bool = true) : void</text>
<text text-anchor="start" x="30" y="-528.8" font-family="Times,serif" font-size="14.00">+ isAutoExitEnabled() : bool</text>
<text text-anchor="start" x="30" y="-509.8" font-family="Times,serif" font-size="14.00">+ setAutoExit(boolean : bool)</text>
<text text-anchor="start" x="30" y="-490.8" font-family="Times,serif" font-size="14.00">+ getName() : string</text>
<text text-anchor="start" x="30" y="-471.8" font-family="Times,serif" font-size="14.00">+ setName(name : string)</text>
<text text-anchor="start" x="30" y="-452.8" font-family="Times,serif" font-size="14.00">+ getVersion() : string</text>
<text text-anchor="start" x="30" y="-433.8" font-family="Times,serif" font-size="14.00">+ setVersion(version : string)</text>
<text text-anchor="start" x="30" y="-414.8" font-family="Times,serif" font-size="14.00">+ getLongVersion()</text>
<text text-anchor="start" x="30" y="-395.8" font-family="Times,serif" font-size="14.00">+ register(name : string) : Symfony\Component\Console\Command\Command</text>
<text text-anchor="start" x="30" y="-376.8" font-family="Times,serif" font-size="14.00">+ addCommands(commands : array)</text>
<text text-anchor="start" x="30" y="-357.8" font-family="Times,serif" font-size="14.00">+ add(command : Symfony\Component\Console\Command\Command)</text>
<text text-anchor="start" x="30" y="-338.8" font-family="Times,serif" font-size="14.00">+ get(name : string)</text>
<text text-anchor="start" x="30" y="-319.8" font-family="Times,serif" font-size="14.00">+ has(name : string) : bool</text>
<text text-anchor="start" x="30" y="-300.8" font-family="Times,serif" font-size="14.00">+ getNamespaces() : array</text>
<text text-anchor="start" x="30" y="-281.8" font-family="Times,serif" font-size="14.00">+ findNamespace(namespace : string) : string</text>
<text text-anchor="start" x="30" y="-262.8" font-family="Times,serif" font-size="14.00">+ find(name : string)</text>
<text text-anchor="start" x="30" y="-243.8" font-family="Times,serif" font-size="14.00">+ all(namespace : string = «unknown»)</text>
<text text-anchor="start" x="30" y="-224.8" font-family="Times,serif" font-size="14.00">+ «static» getAbbreviations(names : array) : array</text>
<text text-anchor="start" x="30" y="-205.8" font-family="Times,serif" font-size="14.00">+ renderThrowable(e : Throwable, output : Symfony\Component\Console\Output\OutputInterface) : void</text>
<text text-anchor="start" x="30" y="-186.8" font-family="Times,serif" font-size="14.00">+ extractNamespace(name : string, limit : int = «unknown») : string</text>
<text text-anchor="start" x="30" y="-167.8" font-family="Times,serif" font-size="14.00">+ setDefaultCommand(commandName : string, isSingleCommand : bool = false) : static</text>
<text text-anchor="start" x="30" y="-148.8" font-family="Times,serif" font-size="14.00">+ isSingleCommand() : bool</text>
</g>
<!-- Bartlett\\UmlWriter\\Console\\Application&#45;&gt;Symfony\\Component\\Console\\Application -->
<g id="edge2" class="edge">
<title>Bartlett\\UmlWriter\\Console\\Application&#45;&gt;Symfony\\Component\\Console\\Application</title>
<path fill="none" stroke="black" d="M622,-958.84C622,-947.57 622,-935.49 622,-922.79"/>
<polygon fill="none" stroke="black" points="625.5,-922.48 622,-912.48 618.5,-922.48 625.5,-922.48"/>
</g>
<!-- Symfony\\Contracts\\Service\\ResetInterface -->
<g id="node3" class="node">
<title>Symfony\\Contracts\\Service\\ResetInterface</title>
<polygon fill="#fefece" stroke="transparent" points="707.5,-89 536.5,-89 536.5,-16 707.5,-16 707.5,-89"/>
<polygon fill="#eeeeee" stroke="transparent" points="545,-50.5 545,-84.5 700,-84.5 700,-50.5 545,-50.5"/>
<polygon fill="none" stroke="black" points="545,-50.5 545,-84.5 700,-84.5 700,-50.5 545,-50.5"/>
<text text-anchor="start" x="577.5" y="-71.3" font-family="Times,serif" font-weight="bold" font-size="14.00">«interface»</text>
<text text-anchor="start" x="563.5" y="-57.3" font-family="Times,serif" font-weight="bold" font-size="14.00">ResetInterface</text>
<polygon fill="none" stroke="black" points="545,-44.5 545,-50.5 700,-50.5 700,-44.5 545,-44.5"/>
<polygon fill="none" stroke="black" points="545,-19.5 545,-44.5 700,-44.5 700,-19.5 545,-19.5"/>
<text text-anchor="start" x="550" y="-28.3" font-family="Times,serif" font-size="14.00">+ «abstract» reset()</text>
</g>
<!-- Symfony\\Component\\Console\\Application&#45;&gt;Symfony\\Contracts\\Service\\ResetInterface -->
<g id="edge1" class="edge">
<title>Symfony\\Component\\Console\\Application&#45;&gt;Symfony\\Contracts\\Service\\ResetInterface</title>
<path fill="none" stroke="black" stroke-dasharray="5,2" d="M622,-135.82C622,-122.34 622,-110.04 622,-99.29"/>
<polygon fill="none" stroke="black" points="625.5,-99.08 622,-89.08 618.5,-99.08 625.5,-99.08"/>
</g>
<!-- Bartlett\\UmlWriter\\Console\\Command\\ClassDiagramCommand -->
<g id="node4" class="node">
<title>Bartlett\\UmlWriter\\Console\\Command\\ClassDiagramCommand</title>
<polygon fill="#fefece" stroke="transparent" points="2423.5,-1095 1292.5,-1095 1292.5,-997 2423.5,-997 2423.5,-1095"/>
<polygon fill="#eeeeee" stroke="transparent" points="1301,-1057 1301,-1091 2416,-1091 2416,-1057 1301,-1057"/>
<polygon fill="none" stroke="black" points="1301,-1057 1301,-1091 2416,-1091 2416,-1057 1301,-1057"/>
<text text-anchor="start" x="1763.5" y="-1063.8" font-family="Times,serif" font-weight="bold" font-size="14.00">ClassDiagramCommand</text>
<polygon fill="none" stroke="black" points="1301,-1032 1301,-1057 2416,-1057 2416,-1032 1301,-1032"/>
<text text-anchor="start" x="1306" y="-1040.8" font-family="Times,serif" font-size="14.00">+ «static» NAME : string = &quot;diagram\:class&quot; {readOnly}</text>
<polygon fill="none" stroke="black" points="1301,-1026 1301,-1032 2416,-1032 2416,-1026 1301,-1026"/>
<polygon fill="none" stroke="black" points="1301,-1001 1301,-1026 2416,-1026 2416,-1001 1301,-1001"/>
<text text-anchor="start" x="1306" y="-1009.8" font-family="Times,serif" font-size="14.00">+ __construct(renderer : Bartlett\UmlWriter\Service\ClassDiagramRenderer, generatorFactory : Bartlett\UmlWriter\Generator\GeneratorFactoryInterface)</text>
</g>
<!-- Symfony\\Component\\Console\\Command\\Command -->
<g id="node5" class="node">
<title>Symfony\\Component\\Console\\Command\\Command</title>
<polygon fill="#fefece" stroke="transparent" points="2463.5,-905.5 1252.5,-905.5 1252.5,-142.5 2463.5,-142.5 2463.5,-905.5"/>
<polygon fill="#eeeeee" stroke="transparent" points="1261,-867 1261,-901 2456,-901 2456,-867 1261,-867"/>
<polygon fill="none" stroke="black" points="1261,-867 1261,-901 2456,-901 2456,-867 1261,-867"/>
<text text-anchor="start" x="1818.5" y="-873.8" font-family="Times,serif" font-weight="bold" font-size="14.00">Command</text>
<polygon fill="none" stroke="black" points="1261,-804 1261,-867 2456,-867 2456,-804 1261,-804"/>
<text text-anchor="start" x="1266" y="-850.8" font-family="Times,serif" font-size="14.00">+ «static» SUCCESS : int = 0 {readOnly}</text>
<text text-anchor="start" x="1266" y="-831.8" font-family="Times,serif" font-size="14.00">+ «static» FAILURE : int = 1 {readOnly}</text>
<text text-anchor="start" x="1266" y="-812.8" font-family="Times,serif" font-size="14.00">+ «static» INVALID : int = 2 {readOnly}</text>
<polygon fill="none" stroke="black" points="1261,-798 1261,-804 2456,-804 2456,-798 1261,-798"/>
<polygon fill="none" stroke="black" points="1261,-146 1261,-798 2456,-798 2456,-146 1261,-146"/>
<text text-anchor="start" x="1266" y="-781.8" font-family="Times,serif" font-size="14.00">+ «static» getDefaultName() : ?string</text>
<text text-anchor="start" x="1266" y="-762.8" font-family="Times,serif" font-size="14.00">+ «static» getDefaultDescription() : ?string</text>
<text text-anchor="start" x="1266" y="-743.8" font-family="Times,serif" font-size="14.00">+ __construct(name : string = «unknown»)</text>
<text text-anchor="start" x="1266" y="-724.8" font-family="Times,serif" font-size="14.00">+ ignoreValidationErrors()</text>
<text text-anchor="start" x="1266" y="-705.8" font-family="Times,serif" font-size="14.00">+ setApplication(application : Symfony\Component\Console\Application = «unknown»)</text>
<text text-anchor="start" x="1266" y="-686.8" font-family="Times,serif" font-size="14.00">+ setHelperSet(helperSet : Symfony\Component\Console\Helper\HelperSet)</text>
<text text-anchor="start" x="1266" y="-667.8" font-family="Times,serif" font-size="14.00">+ getHelperSet() : ?Symfony\Component\Console\Helper\HelperSet</text>
<text text-anchor="start" x="1266" y="-648.8" font-family="Times,serif" font-size="14.00">+ getApplication() : ?Symfony\Component\Console\Application</text>
<text text-anchor="start" x="1266" y="-629.8" font-family="Times,serif" font-size="14.00">+ isEnabled()</text>
<text text-anchor="start" x="1266" y="-610.8" font-family="Times,serif" font-size="14.00">+ run(input : Symfony\Component\Console\Input\InputInterface, output : Symfony\Component\Console\Output\OutputInterface) : int</text>
<text text-anchor="start" x="1266" y="-591.8" font-family="Times,serif" font-size="14.00">+ complete(input : Symfony\Component\Console\Completion\CompletionInput, suggestions : Symfony\Component\Console\Completion\CompletionSuggestions) : void</text>
<text text-anchor="start" x="1266" y="-572.8" font-family="Times,serif" font-size="14.00">+ setCode(code : callable) : static</text>
<text text-anchor="start" x="1266" y="-553.8" font-family="Times,serif" font-size="14.00">+ mergeApplicationDefinition(mergeArgs : bool = true) : void</text>
<text text-anchor="start" x="1266" y="-534.8" font-family="Times,serif" font-size="14.00">+ setDefinition(definition) : static</text>
<text text-anchor="start" x="1266" y="-515.8" font-family="Times,serif" font-size="14.00">+ getDefinition() : Symfony\Component\Console\Input\InputDefinition</text>
<text text-anchor="start" x="1266" y="-496.8" font-family="Times,serif" font-size="14.00">+ getNativeDefinition() : Symfony\Component\Console\Input\InputDefinition</text>
<text text-anchor="start" x="1266" y="-477.8" font-family="Times,serif" font-size="14.00">+ addArgument(name : string, mode : int = «unknown», description : string = &#39;&#39;, default : mixed = «unknown») : static</text>
<text text-anchor="start" x="1266" y="-458.8" font-family="Times,serif" font-size="14.00">+ addOption(name : string, shortcut = «unknown», mode : int = «unknown», description : string = &#39;&#39;, default : mixed = «unknown») : static</text>
<text text-anchor="start" x="1266" y="-439.8" font-family="Times,serif" font-size="14.00">+ setName(name : string) : static</text>
<text text-anchor="start" x="1266" y="-420.8" font-family="Times,serif" font-size="14.00">+ setProcessTitle(title : string) : static</text>
<text text-anchor="start" x="1266" y="-401.8" font-family="Times,serif" font-size="14.00">+ getName() : ?string</text>
<text text-anchor="start" x="1266" y="-382.8" font-family="Times,serif" font-size="14.00">+ setHidden(hidden : bool = true) : static</text>
<text text-anchor="start" x="1266" y="-363.8" font-family="Times,serif" font-size="14.00">+ isHidden() : bool</text>
<text text-anchor="start" x="1266" y="-344.8" font-family="Times,serif" font-size="14.00">+ setDescription(description : string) : static</text>
<text text-anchor="start" x="1266" y="-325.8" font-family="Times,serif" font-size="14.00">+ getDescription() : string</text>
<text text-anchor="start" x="1266" y="-306.8" font-family="Times,serif" font-size="14.00">+ setHelp(help : string) : static</text>
<text text-anchor="start" x="1266" y="-287.8" font-family="Times,serif" font-size="14.00">+ getHelp() : string</text>
<text text-anchor="start" x="1266" y="-268.8" font-family="Times,serif" font-size="14.00">+ getProcessedHelp() : string</text>
<text text-anchor="start" x="1266" y="-249.8" font-family="Times,serif" font-size="14.00">+ setAliases(aliases : iterable) : static</text>
<text text-anchor="start" x="1266" y="-230.8" font-family="Times,serif" font-size="14.00">+ getAliases() : array</text>
<text text-anchor="start" x="1266" y="-211.8" font-family="Times,serif" font-size="14.00">+ getSynopsis(short : bool = false) : string</text>
<text text-anchor="start" x="1266" y="-192.8" font-family="Times,serif" font-size="14.00">+ addUsage(usage : string) : static</text>
<text text-anchor="start" x="1266" y="-173.8" font-family="Times,serif" font-size="14.00">+ getUsages() : array</text>
<text text-anchor="start" x="1266" y="-154.8" font-family="Times,serif" font-size="14.00">+ getHelper(name : string) : ?mixed</text>
</g>
<!-- Bartlett\\UmlWriter\\Console\\Command\\ClassDiagramCommand&#45;&gt;Symfony\\Component\\Console\\Command\\Command -->
<g id="edge3" class="edge">
<title>Bartlett\\UmlWriter\\Console\\Command\\ClassDiagramCommand&#45;&gt;Symfony\\Component\\Console\\Command\\Command</title>
<path fill="none" stroke="black" d="M1858,-996.55C1858,-974.82 1858,-947.05 1858,-915.88"/>
<polygon fill="none" stroke="black" points="1861.5,-915.65 1858,-905.65 1854.5,-915.65 1861.5,-915.65"/>
</g>
</g>
</svg>
